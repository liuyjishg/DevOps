### ELK ###
### INPUT Log

input {
    file {
        path => "/usr/local/logstash-7.2.0/all.log"
        type => "test-zabbix"
        #start_position => "beginning"
        sincedb_path => "/dev/null"
        codec => multiline {
            pattern => "^%{TIMESTAMP_ISO8601}"
            negate => true
            #what => "previous"
            what => "next"
        }
    }
}

filter {
    grok {
             match => { "message" => "%{SYSLOGTIMESTAMP:message_timestamp}" }
        }

    mutate {
            remove_field => "@version"
            remove_field => "tags"
        }

    if [message] =~ /(fatal)/ {
            mutate {
                 add_field => [ "[zabbix_key]", "applog_fatal" ]
            }
    }
    if [message] =~ /(OutOfDirectMemoryError|direct memory|OutOfMemory)/ {
            mutate {
                 add_field => [ "[zabbix_key]", "applog_OutOfDirectMemoryError" ]
            }
    }
    if [message] =~ /(fail)/ {
            mutate {
                 add_field => [ "[zabbix_key]", "applog_fail" ]
            }
    }
    if [message] =~ /(fault)/ {
            mutate {
                 add_field => [ "[zabbix_key]", "applog_fault" ]
            }
    }
    if [message] =~ /(dead)/ {
            mutate {
                 add_field => [ "[zabbix_key]", "applog_dead" ]
            }
    }
    if [message] =~ /(down|showdown)/ {
            mutate {
                 add_field => [ "[zabbix_key]", "applog_down" ]
            }
    }

    #if [message] =~ /(ERR|error|ERROR|Failed)/ {
    #        mutate {
    #             add_field => [ "[zabbix_key]", "apperror" ]
    #        }
    #}
    #if [message] =~ /(direct memory|OutOfDirectMemoryError|OutOfMemory)/ {
    #        mutate {
    #             add_field => [ "[zabbix_key]", "appoutmemory" ]
                 #add_field => [ "[zabbix_host]", "%{host}" ]
    #        }
    #}
}


### OUTPUT ES
output {
   if [type] == "test-zabbix" {
        elasticsearch {
            hosts => ["http://10.88.135.54:9200"]
            index => "test-zabbix-%{+YYYY-MM-dd}"
        }
   }

   if [message]  =~ /(ERR|error|ERROR|Failed|direct memory|OutOfDirectMemoryError|OutOfMemory)/  {
         zabbix {
             zabbix_host => "[host]"
             zabbix_key => "[zabbix_key]"
             zabbix_server_host => "10.88.2.17"
             zabbix_server_port => "10051"
             zabbix_value => "message"
         }
   }
          stdout { codec => rubydebug }

}

#### end --Kevin Liu
